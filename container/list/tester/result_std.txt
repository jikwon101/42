6 5 4 3 2 1 
[ ]
[ 10 10 10 10 ]
[ 10 10 10 10 ]
[ 10 10 10 10 ]
[ 1 2 3 4 5 ]
NSt3__19allocatorIiEE
----------------------------
It indicates : 1
front : 1, back : 5
It indicates : 1
----------------------------
t1 has 0 elements
t2 has 1 elements
t1 isEmpty 1
t2 isEmpty 0
t1<int> max: 768614336404564650
t2<char> max: 768614336404564650
----------------------------
t1:[ ]
t1: assign
t1:[ 3 3 3 3 ]
t1: assign
t1:[ 1 2 3 4 5 ]
t1: push_front
t1:[ 9 1 2 3 4 5 ]
t1: push_back
t1:[ 9 1 2 3 4 5 11 ]
t1: pop_front
t1:[ 1 2 3 4 5 11 ]
t1: pop_back
t1:[ 1 2 3 4 5 ]
t1: resize to 3
t1:[ 1 2 3 ]
t1: resize to 6
t1:[ 1 2 3 0 0 0 ]
t2:[ 1 2 3 4 5 ]
t1 swap with t2
t1:[ 1 2 3 4 5 ]
t2:[ 1 2 3 0 0 0 ]
----------------------------
t1:insert begin, 10
t1:[ 10 ]
t1:insert begin, 3, 4
t1:[ 4 4 4 10 ]
t2:insert begin, t1.[b, e-1)
t2:[ 4 4 4 99 ]
t1 clear
t1:[ ]
t2 erase begin
t2:[ 4 4 99 ]
t2 erase end-1
t2:[ 4 4 ]
t2 erase range
t2:[ ]
----------------------------
t1:[ 1 5 0 9 6 7 6 13 4 6 ]
t1 reverse
t1:[ 6 4 13 6 7 6 9 0 5 1 ]
t1 sort
t1:[ 0 1 4 5 6 6 6 7 9 13 ]
t1 unique
t1:[ 0 1 4 5 6 7 9 13 ]
t1 remove
t1:[ 0 1 4 5 6 7 9 ]
t1 remove if
t1:[ 0 4 6 ]
----------------------------
t1:[ 2.6 2.3 4.1 2.4 2.1 1.8 ]
t1: sort (comp)
t1:[ 1.8 2.6 2.3 2.4 2.1 4.1 ]
t2:[ 2.6 2.3 4.1 2.4 2.1 1.8 ]
t2: unique (pred)
t2:[ 2.6 4.1 2.4 1.8 ]
----------------------------
t1:[ 1 2 3 4 5 ]
t2:[ 66 77 88 99 ]
t1:splice(b,t2)
t1:[ 66 77 88 99 1 2 3 4 5 ]
t2:[ ]
t2:splice(b,t1,t1.b)
t1:[ 77 88 99 1 2 3 4 5 ]
t2:[ 66 ]
t2:splice(b,t1,t1.b, t1.e)
t1:[ ]
t2:[ 77 88 99 1 2 3 4 5 66 ]
----------------------------
t1:[ 1 3 5 9 11 ]
t2:[ 2 4 7 8 9 ]
t1: merge(t2)
t1:[ 1 2 3 4 5 7 8 9 9 11 ]
t2:[ ]
t3:[ 2.1 2.3 3.2 ]
t4:[ 1.7 2.2 2.5 2.7 ]
t3: merge(t4, mycomparison)
t3:
[ 1.7 2.1 2.3 2.2 2.5 2.7 3.2 ]
t4:[ ]
----------------------------
t1 : [ 3 ]
t2 : [ 1 3 ]
t1 == t2  ? false
t1 < t2  ? false
t1 >= t2  ? true
